@page "/Error"
@using System.Diagnostics

<style type="text/css">
	body {
		background: #000000;
	}

	.background {
		background-image: url('https://decyple.com/gs-home-v2.jpg');
		background-size: 100%;
		height: 100vh;
		color: white;
	}

	.top-row {
		justify-content: flex-end;
		display: flex;
		align-items: center;
	}

	.container {
		width: 100vw;
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 10px;
	}

	.left {
		flex: 1;
	}

	.right {
		display: flex;
		gap: 10px;
	}

	* {
		box-sizing: border-box;
		color: whitesmoke;
	}
</style>

<PageTitle>Error</PageTitle>

<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>

@if (ShowRequestId)
{
    <p>
        <strong>Request ID:</strong> <code>@RequestId</code>
    </p>
}

<h3>Development Mode</h3>
<p>
    Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
</p>
<p>
    <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>

@code{
    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

    protected override void OnInitialized() =>
        RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;
}
