@inherits LayoutComponentBase

@inject NavigationManager NavigationManager


<style type="text/css">
    .button
    {
        display: flex;
        overflow: hidden;
        margin: 25px 25px 25px 0px;
        padding: 12px 25px;
        cursor: pointer;
        user-select: none;
        transition: all 150ms linear;
        text-align: center;
        white-space: nowrap;
        text-decoration: none !important;
        text-transform: none;
        text-transform: capitalize;
        color: #fff;
        border: 2px solid #5be1e6;
        border-radius: 36px;
        font-size: 13px;
        font-weight: 500;
        line-height: 1.3;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        justify-content: center;
        align-items: center;
        flex: 0 0 160px;
        /* box-shadow: 2px 5px 10px #e4e4e4; */
        width: 100%;
        &:hover
        {
            transition: all 150ms linear;
            opacity: .85;
        }

    &:active
    {
        transition: all 150ms linear;
        opacity: .75;
    }

    &:focus
    {
        outline: 1px dotted #959595;
        outline-offset: -4px;
    }

    }

    .button.-dark
    {
        color: #000000;
        background: #5be1e6;
    }
        &:focus
    {
        outline: 1px dotted white;
        outline-offset: -4px;
    }

    }

    .container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        border: 1px solid #ccc;
        margin: 25px;
    }

    .left {
        flex: 1;
    }

    .right {
        display: flex;
        gap: 10px;
    }

    .menuButton {
        font-size: 25px;
        padding: 5px 10px;
        border: 1px solid #000;
        cursor: pointer;
    }
</style>



<div class="page">
    <div class="sidebar" hidden="@hideNavMenu">
        <NavMenu />
    </div>

    <main>
        <div class="px-4 container" style="background: #000000;">

            <div class="pt-1 left">
                <button data-mdb-button-init data-mdb-ripple-init class="btn-dark btn-lg btn-block menuButton" @onclick="OpenNavMenu">☰</button>
            </div>

            <div class="nav-item px-3 right">
                <form action="Account/Login">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button type="submit" class="button -dark">
                        <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Login
                    </button>
                </form>
            </div>

            <div class="nav-item px-3 right">
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button type="submit" class="button -dark">
                        <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                    </button>
                </form>
            </div>

        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private string? currentUrl;
    private bool hideNavMenu { get; set; } = true;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    public void OpenNavMenu()
    {
        if (hideNavMenu)
            hideNavMenu = false;
        else
            hideNavMenu = true;
    }
}