name: Build, Validate Docker, and Deploy to Render

on:
  push:
    branches:
      - main
      - deployment
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy (main, deployment)'
        required: true
        default: 'main'

jobs:
  build:
    name: Build ASP.NET App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore GymSync.csproj
        
      - name: Recreate connection string
        run: echo "${{ secrets.CONNECTION_STRING_BASE64 }}" | base64 -d > connection.txt

      - name: Build app
        run: dotnet build GymSync.csproj --configuration Release --no-restore

      - name: Publish app
        run: dotnet publish GymSync.csproj --configuration Release --no-build -o publish

  docker:
    name: Docker Build Validation
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u absoluteaquarian --password-stdin

      - name: Build Docker image
        run: |
          docker build -t absoluteaquarian/gymsync:${{ github.event.inputs.branch || github.ref_name }} .

      - name: Push Docker image
        run: docker push absoluteaquarian/gymsync:${{ github.event.inputs.branch || github.ref_name }}

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Set deploy hook URL
        id: set-url
        run: |
          # Check if the workflow was triggered manually or by a push
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Manual trigger, use the branch from inputs
            BRANCH="${{ github.event.inputs.branch }}"
          else
            # Push event, extract branch name from github.ref
            BRANCH="${{ github.ref }}"   # Ref format: refs/heads/{branch}
            BRANCH="${BRANCH#refs/heads/}" # Strip "refs/heads/" to get the branch name
          fi

          # Set the deploy URL based on the branch
          if [[ "$BRANCH" == "main" ]]; then
            echo "url=${{ secrets.RENDER_DEPLOY_HOOK_URL_PROD }}" >> $GITHUB_OUTPUT
          else
            echo "url=${{ secrets.RENDER_DEPLOY_HOOK_URL_STAGING }}" >> $GITHUB_OUTPUT
          fi

      - name: Trigger Render deploy
        run: curl -X POST "${{ steps.set-url.outputs.url }}"