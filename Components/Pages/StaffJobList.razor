@inject ApplicationDbContext DbContext;

@page "/staff-job-list";
@using GymSync.Data;
@using GymSync.Models;
@using GymSync.Views;
@using GymSync.Components;
@using Microsoft.EntityFrameworkCore;

<PageTitle>GymSync Staff Job Listing</PageTitle>

<h3>StaffJobList</h3>

<p>This page displays the gym's staff and their current role in the facility</p>

@if (!_ready)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="equipment-table">
        <thead>
            <tr>
                <th>User ID</th>
                <th>Name</th>
                <th>Job Name</th>
                <th>Job Description</th>
                <th>Hourly Wage</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var staff in StaffJobsList)
            {
                <tr>
                    <td>@staff.UserID</td>
                    <td>@staff.FirstName @staff.LastName</td>
                    <td>@staff.JobName</td>
                    <td>@staff.JobDescription</td>
                    <td>@staff.HourlyWage</td>
                </tr>	
            }
        </tbody>

    </table>

    
}

@code {

    //set the required variables for each time the page is loaded.
    private Query _query;
    private bool _ready;

    //List of StaffJobView classes for page info
    private List<StaffJobView> StaffJobsList = new List<StaffJobView>();

    //local data transfer object for working with IQueryable
    public class StaffDto { public int staff_id { get; set; } }
        
    //Code for loading the page
    protected override async Task OnInitializedAsync()
    {
        _ready = false;

        _query = new Query(DbContext);


        //get the list of members from the user_x_staff list.
        foreach (var staff in await DbContext.STAFF.Select(t => new StaffDto { staff_id = t.staff_id }).ToListAsync())
        {
            //find the user id
            UserView userView = await _query.StaffToUser(staff.staff_id);
            JobEntity job = await _query.StaffToJob(staff.staff_id);

            if ((job != null) && (userView != null))
            {
                StaffJobsList.Add(new StaffJobView(userView.UserID, userView.FirstName, userView.LastName, job.job_name, job.job_description, job.hourly_wage));
            }
        }

		_ready = true;
	}



}
