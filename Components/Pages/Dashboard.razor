@inject ApplicationDbContext _dbContext;
@inject UserSessionService _UserSession;
@inject NavigationManager _Navigation;

@page "/dashboard"
@using GymSync.Data
@using GymSync.Models
@using GymSync.Views;
@using GymSync.Components;
@using GymSync.Services;
@using Microsoft.EntityFrameworkCore;

<PageTitle>GymSync Dashboard Rerouter</PageTitle>

@if(!_ready)
{
	<p>Awaiting server...</p>
}
else{

	<div class="home-page-main">
		<h1>Hello, @_userName, welcome to GymSync!</h1>

		<p>This is the main page of the GymSync application</p>

		@if (_isTrainer)
		{
			<div class="trainer-section">
				<p>Welcome to your GymSync Trainer Session.</p>
				<p> <a href="trainer-appointment-list/@_trainerID">View Your Appointments</a></p>
			</div>
		}

		@if (_isStaff)
		{
			<div class="staff-section">
				<p>This is the staff section.</p>
				<p> <a href="equipment-availability">Click to View Equipment Status</a></p>
			</div>
		}
		@if (_isClient)
		{
			<div class="client-section">
				<p>This is the client section.</p>
				<p><a href="client-appointment-list/@_clientID"> Link to Client Appointment List</a></p>
			</div>
		}

	</div>

}



@code {

	Query _query;
	private bool _ready;

	//variables for determining the view
	//userID will be used to lookup the other ID's and determine if the user belongs to those classes
	private int _userID;
	private int _trainerID;
	private int _staffID;
	private int _clientID;

	private bool _isUser = true;
	private bool _isTrainer = true;
	private bool _isStaff = true;
	private bool _isClient = true;


	private List<AppointmentEntity> _clientAppointmentList = [];
	//variables for user information
	private string _userName = "Unknown User";

	protected override async Task OnInitializedAsync()
	{
		_ready = false;
		if (_UserSession.UserID != null)
		{
			_userID = (int)_UserSession.UserID;
		}

		_query = new Query(_dbContext);

		var roles = await _query.GetUserRolesForUser(_userID);
		if (roles is not null) {
			// Information for the user exists
			_userName = roles.User.FirstName.ToUpper() + " " + roles.User.LastName.ToUpper();
			_isUser = true;

			if (roles.Trainer is not null) {
				_trainerID = roles.Trainer.trainer_id;
				_isTrainer = true;
				_UserSession.TrainerID = _trainerID;
			} else {
				_trainerID = 0;
				_isTrainer = false;
				_UserSession.TrainerID = _trainerID;
			}

			if (roles.Staff is not null) {
				_staffID = roles.Staff.staff_id;
				_isStaff = true;
				_UserSession.StaffID = _staffID;
			} else {
				_staffID = 0;
				_isStaff = false;
				_UserSession.StaffID = _staffID;
			}

			if (roles.Client is not null) {
				_clientID = roles.Client.client_id;
				_isClient = true;
				_UserSession.ClientID = _clientID;
			} else {
				_clientID = 0;
				_isClient = false;
				_UserSession.ClientID = _clientID;
			}
		} else {
			_userName = "Unknown User";
			_isUser = false;
			_trainerID = 0;
			_isTrainer = false;
			_staffID = 0;
			_isStaff = false;
			_clientID = 0;
			_isClient = false;
		}

		if (_isTrainer)
		{
			_Navigation.NavigateTo($"/trainer-appointment-list/{_trainerID}");
		}
		else if (_isStaff)
		{
			_Navigation.NavigateTo($"/staff-job-list");
		}
		else if (_isClient)
		{
			_Navigation.NavigateTo($"/client-appointment-list/{_clientID}");
		}
		else if (_isUser)
		{
			_Navigation.NavigateTo($"/unassigned-user/{_userID}");
		}

		_ready = true;
	}
	

}
